//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SOAP_Mobile.com.riskprofiling.www {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CaptchaServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CaptchaService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback StartOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback TryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CaptchaService() {
            this.Url = "https://www.riskprofiling.com/Webcoda/CMSFormControls/Captcha/CaptchaService.asmx" +
                "";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event StartCompletedEventHandler StartCompleted;
        
        /// <remarks/>
        public event ImageCompletedEventHandler ImageCompleted;
        
        /// <remarks/>
        public event AudioCompletedEventHandler AudioCompleted;
        
        /// <remarks/>
        public event TryCompletedEventHandler TryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Start", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Start(int numberOfImages) {
            this.Invoke("Start", new object[] {
                        numberOfImages});
        }
        
        /// <remarks/>
        public void StartAsync(int numberOfImages) {
            this.StartAsync(numberOfImages, null);
        }
        
        /// <remarks/>
        public void StartAsync(int numberOfImages, object userState) {
            if ((this.StartOperationCompleted == null)) {
                this.StartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartOperationCompleted);
            }
            this.InvokeAsync("Start", new object[] {
                        numberOfImages}, this.StartOperationCompleted, userState);
        }
        
        private void OnStartOperationCompleted(object arg) {
            if ((this.StartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Image", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Image(int imageIndex) {
            this.Invoke("Image", new object[] {
                        imageIndex});
        }
        
        /// <remarks/>
        public void ImageAsync(int imageIndex) {
            this.ImageAsync(imageIndex, null);
        }
        
        /// <remarks/>
        public void ImageAsync(int imageIndex, object userState) {
            if ((this.ImageOperationCompleted == null)) {
                this.ImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImageOperationCompleted);
            }
            this.InvokeAsync("Image", new object[] {
                        imageIndex}, this.ImageOperationCompleted, userState);
        }
        
        private void OnImageOperationCompleted(object arg) {
            if ((this.ImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Audio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Audio() {
            this.Invoke("Audio", new object[0]);
        }
        
        /// <remarks/>
        public void AudioAsync() {
            this.AudioAsync(null);
        }
        
        /// <remarks/>
        public void AudioAsync(object userState) {
            if ((this.AudioOperationCompleted == null)) {
                this.AudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAudioOperationCompleted);
            }
            this.InvokeAsync("Audio", new object[0], this.AudioOperationCompleted, userState);
        }
        
        private void OnAudioOperationCompleted(object arg) {
            if ((this.AudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AudioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Try", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Try(string value) {
            this.Invoke("Try", new object[] {
                        value});
        }
        
        /// <remarks/>
        public void TryAsync(string value) {
            this.TryAsync(value, null);
        }
        
        /// <remarks/>
        public void TryAsync(string value, object userState) {
            if ((this.TryOperationCompleted == null)) {
                this.TryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTryOperationCompleted);
            }
            this.InvokeAsync("Try", new object[] {
                        value}, this.TryOperationCompleted, userState);
        }
        
        private void OnTryOperationCompleted(object arg) {
            if ((this.TryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void StartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AudioCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591
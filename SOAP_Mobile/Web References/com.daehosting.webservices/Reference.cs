//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SOAP_Mobile.com.daehosting.webservices {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TemperatureConversionsSoapBinding", Namespace="http://webservices.daehosting.com/temperature")]
    public partial class TemperatureConversions : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CelsiusToFahrenheitOperationCompleted;
        
        private System.Threading.SendOrPostCallback FahrenheitToCelsiusOperationCompleted;
        
        private System.Threading.SendOrPostCallback WindChillInCelsiusOperationCompleted;
        
        private System.Threading.SendOrPostCallback WindChillInFahrenheitOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TemperatureConversions() {
            this.Url = "https://webservices.daehosting.com/services/TemperatureConversions.wso";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CelsiusToFahrenheitCompletedEventHandler CelsiusToFahrenheitCompleted;
        
        /// <remarks/>
        public event FahrenheitToCelsiusCompletedEventHandler FahrenheitToCelsiusCompleted;
        
        /// <remarks/>
        public event WindChillInCelsiusCompletedEventHandler WindChillInCelsiusCompleted;
        
        /// <remarks/>
        public event WindChillInFahrenheitCompletedEventHandler WindChillInFahrenheitCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.daehosting.com/temperature", ResponseNamespace="http://webservices.daehosting.com/temperature", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal CelsiusToFahrenheit(decimal nCelsius) {
            object[] results = this.Invoke("CelsiusToFahrenheit", new object[] {
                        nCelsius});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CelsiusToFahrenheitAsync(decimal nCelsius) {
            this.CelsiusToFahrenheitAsync(nCelsius, null);
        }
        
        /// <remarks/>
        public void CelsiusToFahrenheitAsync(decimal nCelsius, object userState) {
            if ((this.CelsiusToFahrenheitOperationCompleted == null)) {
                this.CelsiusToFahrenheitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCelsiusToFahrenheitOperationCompleted);
            }
            this.InvokeAsync("CelsiusToFahrenheit", new object[] {
                        nCelsius}, this.CelsiusToFahrenheitOperationCompleted, userState);
        }
        
        private void OnCelsiusToFahrenheitOperationCompleted(object arg) {
            if ((this.CelsiusToFahrenheitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CelsiusToFahrenheitCompleted(this, new CelsiusToFahrenheitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.daehosting.com/temperature", ResponseNamespace="http://webservices.daehosting.com/temperature", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal FahrenheitToCelsius(decimal nFahrenheit) {
            object[] results = this.Invoke("FahrenheitToCelsius", new object[] {
                        nFahrenheit});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void FahrenheitToCelsiusAsync(decimal nFahrenheit) {
            this.FahrenheitToCelsiusAsync(nFahrenheit, null);
        }
        
        /// <remarks/>
        public void FahrenheitToCelsiusAsync(decimal nFahrenheit, object userState) {
            if ((this.FahrenheitToCelsiusOperationCompleted == null)) {
                this.FahrenheitToCelsiusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFahrenheitToCelsiusOperationCompleted);
            }
            this.InvokeAsync("FahrenheitToCelsius", new object[] {
                        nFahrenheit}, this.FahrenheitToCelsiusOperationCompleted, userState);
        }
        
        private void OnFahrenheitToCelsiusOperationCompleted(object arg) {
            if ((this.FahrenheitToCelsiusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FahrenheitToCelsiusCompleted(this, new FahrenheitToCelsiusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.daehosting.com/temperature", ResponseNamespace="http://webservices.daehosting.com/temperature", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal WindChillInCelsius(decimal nCelsius, decimal nWindSpeed) {
            object[] results = this.Invoke("WindChillInCelsius", new object[] {
                        nCelsius,
                        nWindSpeed});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void WindChillInCelsiusAsync(decimal nCelsius, decimal nWindSpeed) {
            this.WindChillInCelsiusAsync(nCelsius, nWindSpeed, null);
        }
        
        /// <remarks/>
        public void WindChillInCelsiusAsync(decimal nCelsius, decimal nWindSpeed, object userState) {
            if ((this.WindChillInCelsiusOperationCompleted == null)) {
                this.WindChillInCelsiusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWindChillInCelsiusOperationCompleted);
            }
            this.InvokeAsync("WindChillInCelsius", new object[] {
                        nCelsius,
                        nWindSpeed}, this.WindChillInCelsiusOperationCompleted, userState);
        }
        
        private void OnWindChillInCelsiusOperationCompleted(object arg) {
            if ((this.WindChillInCelsiusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WindChillInCelsiusCompleted(this, new WindChillInCelsiusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.daehosting.com/temperature", ResponseNamespace="http://webservices.daehosting.com/temperature", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal WindChillInFahrenheit(decimal nFahrenheit, decimal nWindSpeed) {
            object[] results = this.Invoke("WindChillInFahrenheit", new object[] {
                        nFahrenheit,
                        nWindSpeed});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void WindChillInFahrenheitAsync(decimal nFahrenheit, decimal nWindSpeed) {
            this.WindChillInFahrenheitAsync(nFahrenheit, nWindSpeed, null);
        }
        
        /// <remarks/>
        public void WindChillInFahrenheitAsync(decimal nFahrenheit, decimal nWindSpeed, object userState) {
            if ((this.WindChillInFahrenheitOperationCompleted == null)) {
                this.WindChillInFahrenheitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWindChillInFahrenheitOperationCompleted);
            }
            this.InvokeAsync("WindChillInFahrenheit", new object[] {
                        nFahrenheit,
                        nWindSpeed}, this.WindChillInFahrenheitOperationCompleted, userState);
        }
        
        private void OnWindChillInFahrenheitOperationCompleted(object arg) {
            if ((this.WindChillInFahrenheitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WindChillInFahrenheitCompleted(this, new WindChillInFahrenheitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CelsiusToFahrenheitCompletedEventHandler(object sender, CelsiusToFahrenheitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CelsiusToFahrenheitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CelsiusToFahrenheitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FahrenheitToCelsiusCompletedEventHandler(object sender, FahrenheitToCelsiusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FahrenheitToCelsiusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FahrenheitToCelsiusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void WindChillInCelsiusCompletedEventHandler(object sender, WindChillInCelsiusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WindChillInCelsiusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WindChillInCelsiusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void WindChillInFahrenheitCompletedEventHandler(object sender, WindChillInFahrenheitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WindChillInFahrenheitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WindChillInFahrenheitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591